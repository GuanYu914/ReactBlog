{"version":3,"sources":["utils.js","WebAPI.js","redux/reducers/userReducer.js","components/Header/Header.js","components/Header/index.js","pages/HomePage/index.js","pages/LoginPage/index.js","redux/reducers/postReducer.js","pages/ArticlePage/index.js","pages/PostPage/index.js","App.js","redux/store.js","index.js"],"names":["TOKEN_NAME","setAuthToken","token","window","localStorage","setItem","getAuthToken","getItem","BaseURL","userReducer","createSlice","name","initialState","errMsg","reducers","setUser","state","action","payload","setErrMsg","getUser","dispatch","fetch","headers","authorization","then","res","json","getMe","response","ok","data","toString","userLogin","username","password","method","body","JSON","stringify","message","actions","HeaderContainer","styled","div","Brand","NavbarList","LeftContainer","Nav","Link","props","$active","Header","location","useLocation","useDispatch","user","useSelector","store","to","pathname","onClick","Root","PostContainer","PostTitle","PostDate","Post","post","id","title","Date","createdAt","toLocaleString","HomePage","useState","posts","setPosts","useEffect","map","ErrorMessage","LoginPage","setUsername","setPassword","history","useHistory","errorMessage","push","onSubmit","e","preventDefault","value","onChange","target","type","postReducer","isLoadingPost","newPostResp","setIsLoadingPost","setPost","setNewPostResp","getPost","getPostByID","catch","console","log","newPost","postTitle","postBody","postNewArticle","PostHeader","PostTime","PostBody","ArticlePage","postID","useParams","isLoading","PostPageContainer","PostForm","form","input","textarea","PostSubmitButton","PostPage","setPostTitle","setPostBody","required","placeholder","rows","cols","App","exact","path","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bbe4c03b.chunk.js","sourcesContent":["const TOKEN_NAME = \"token\";\n\nexport const setAuthToken = function (token) {\n  window.localStorage.setItem(TOKEN_NAME, token);\n};\n\nexport const getAuthToken = function () {\n  return window.localStorage.getItem(TOKEN_NAME);\n};\n","import { getAuthToken } from \"./utils\";\nconst BaseURL = \"https://student-json-api.lidemy.me\";\n\nexport const getPosts = function () {\n  return fetch(`${BaseURL}/posts?_sort=createdAt&_order=desc`).then((res) =>\n    res.json()\n  );\n};\n\nexport const getPostByID = function (id) {\n  return fetch(`${BaseURL}/posts?id=${id}`).then((res) => res.json());\n};\n\nexport const login = function (username, password) {\n  return fetch(`${BaseURL}/login`, {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      username: username,\n      password: password,\n    }),\n  }).then((res) => res.json());\n};\n\nexport const getMe = function () {\n  const token = getAuthToken();\n\n  return fetch(`${BaseURL}/me`, {\n    headers: {\n      authorization: `Bearer ${token}`,\n    },\n  }).then((res) => res.json());\n};\n\nexport const postNewArticle = function (postTitle, postBody) {\n  const token = getAuthToken();\n\n  return fetch(`${BaseURL}/posts`, {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\",\n      authorization: `Bearer ${token}`,\n    },\n    body: JSON.stringify({\n      title: postTitle,\n      body: postBody,\n    }),\n  }).then((res) => res.json());\n};\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { getAuthToken, setAuthToken } from \"../../utils\";\nimport { getMe, login } from \"../../WebAPI\";\n\nexport const userReducer = createSlice({\n  name: \"user\",\n  initialState: {\n    name: null,\n    errMsg: null,\n  },\n  reducers: {\n    setUser: (state, action) => {\n      state.name = action.payload;\n    },\n    setErrMsg: (state, action) => {\n      state.errMsg = action.payload;\n    },\n  },\n});\n\n// redux-thunk\nexport const getUser = () => (dispatch) => {\n  if (getAuthToken() !== null) {\n    getMe().then((response) => {\n      if (!response.ok) {\n        dispatch(setErrMsg(response.toString()));\n        return;\n      }\n      dispatch(setErrMsg(null));\n      dispatch(setUser(response.data));\n    });\n  }\n};\n\nexport const userLogin = (data) => (dispatch) => {\n  login(data.username, data.password).then((response) => {\n    if (!response.ok) {\n      dispatch(setErrMsg(response.message));\n      return;\n    }\n    setAuthToken(response.token);\n    dispatch(getUser());\n  });\n};\n\nexport const { setUser, setErrMsg } = userReducer.actions;\nexport default userReducer.reducer;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { setUser } from \"../../redux/reducers/userReducer\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setAuthToken } from \"../../utils\";\n\nconst HeaderContainer = styled.div`\n  height: 64px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.2);\n  padding: 0px 32px;\n`;\n\nconst Brand = styled.div`\n  font-size: 24px;\n  font-weight: bold;\n`;\n\nconst NavbarList = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst LeftContainer = styled.div`\n  display: flex;\n  align-items: center;\n\n  ${NavbarList} {\n    margin-left: 32px;\n  }\n`;\n\nconst Nav = styled(Link)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 64px;\n  width: 128px;\n  font-weight: bold;\n  cursor: pointer;\n  color: black;\n  text-decoration: none;\n\n  ${(props) =>\n    props.$active &&\n    `\n    background: rgba(0, 0, 0, 0.2);\n  `}\n`;\n\nexport default function Header() {\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const user = useSelector((store) => store.user.name);\n\n  function handleLogout() {\n    setAuthToken(null);\n    dispatch(setUser(null));\n  }\n\n  return (\n    <HeaderContainer>\n      <LeftContainer>\n        <Brand>我的第一個部落格</Brand>\n        <NavbarList>\n          <Nav to=\"/\" $active={location.pathname === \"/\"}>\n            首頁\n          </Nav>\n          {user && (\n            <Nav to=\"new-post\" $active={location.pathname === \"/new-post\"}>\n              發佈文章\n            </Nav>\n          )}\n        </NavbarList>\n      </LeftContainer>\n      <div>\n        {!user && (\n          <Nav to=\"login\" $active={location.pathname === \"/login\"}>\n            登入\n          </Nav>\n        )}\n        {user && (\n          <Nav to=\"/\" onClick={handleLogout}>\n            登出\n          </Nav>\n        )}\n      </div>\n    </HeaderContainer>\n  );\n}\n","import Header from \"./Header\";\nexport default Header;\n","import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { getPosts } from \"../../WebAPI\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nconst Root = styled.div``;\n\nconst PostContainer = styled.div`\n  border-bottom: 1px solid rgba(0, 0, 0, 0.2);\n  padding: 16px;\n  display: flex;\n  align-items: flex-end;\n  justify-content: space-between;\n`;\n\nconst PostTitle = styled(Link)`\n  font-size: 24px;\n  text-decoration: none;\n  color: black;\n`;\n\nconst PostDate = styled.div`\n  color: rgba(0, 0, 0, 0.8);\n`;\n\nfunction Post({ post }) {\n  return (\n    <PostContainer>\n      <PostTitle to={`/posts/${post.id}`}>{post.title}</PostTitle>\n      <PostDate>{new Date(post.createdAt).toLocaleString()}</PostDate>\n    </PostContainer>\n  );\n}\n\nPost.propTypes = {\n  post: PropTypes.object,\n};\n\nexport default function HomePage() {\n  const [posts, setPosts] = useState([]);\n\n  useEffect(() => {\n    getPosts().then((posts) => setPosts(posts));\n  }, []);\n\n  return (\n    <Root>\n      {posts.map((post) => (\n        <Post key={post.id} post={post} />\n      ))}\n    </Root>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router\";\nimport { setErrMsg, userLogin } from \"../../redux/reducers/userReducer\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst ErrorMessage = styled.div`\n  color: red;\n`;\n\nexport default function LoginPage() {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const user = useSelector((store) => store.user.name);\n  const errorMessage = useSelector((store) => store.user.errMsg);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    dispatch(userLogin({ username, password }));\n  }\n\n  function handleUsernameChange(e) {\n    setUsername(e.target.value);\n  }\n\n  function handlePasswordChange(e) {\n    setPassword(e.target.value);\n  }\n\n  useEffect(() => {\n    if (user) {\n      history.push(\"/\");\n    }\n  }, [user]);\n\n  useEffect(() => {\n    return () => {\n      dispatch(setErrMsg(null));\n    };\n  }, [setErrMsg]);\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        username: <input value={username} onChange={handleUsernameChange} />\n      </div>\n      <div>\n        password:{\" \"}\n        <input\n          type=\"password\"\n          value={password}\n          onChange={handlePasswordChange}\n        />\n      </div>\n      <input type=\"submit\" value=\"登入\" />\n      {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n    </form>\n  );\n}\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { getPostByID, postNewArticle } from \"../../WebAPI\";\n\nexport const postReducer = createSlice({\n  name: \"posts\",\n  initialState: {\n    isLoadingPost: true,\n    post: null,\n    newPostResp: null,\n  },\n  reducers: {\n    setIsLoadingPost: (state, action) => {\n      state.isLoadingPost = action.payload;\n    },\n    setPost: (state, action) => {\n      state.post = action.payload;\n    },\n    setNewPostResp: (state, action) => {\n      state.newPostResp = action.payload;\n    },\n  },\n});\n\n// redux-thunk\nexport const getPost = (id) => (dispatch) => {\n  dispatch(setIsLoadingPost(true));\n  getPostByID(id)\n    .then((res) => {\n      dispatch(setPost(res));\n      dispatch(setIsLoadingPost(false));\n    })\n    .catch(() => {\n      dispatch(setIsLoadingPost(true));\n      console.log(\"error occur when get post\");\n    });\n};\n\nexport const newPost = (data) => (dispatch) => {\n  postNewArticle(data.postTitle, data.postBody).then((res) => {\n    dispatch(setNewPostResp(res));\n  });\n};\n\nexport const { setIsLoadingPost, setPost, setNewPostResp } =\n  postReducer.actions;\nexport default postReducer.reducer;\n","import React, { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { getPost } from \"../../redux/reducers/postReducer\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst PostContainer = styled.div`\n  margin-top: 40px;\n  padding: 10px 20px;\n`;\n\nconst PostHeader = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  align-items: flex-end;\n  margin-bottom: 50px;\n`;\n\nconst PostTitle = styled.div`\n  font-size: 40px;\n  font-weight: bold;\n`;\n\nconst PostTime = styled.div`\n  margin-left: 30px;\n  font-size: 12px;\n`;\n\nconst PostBody = styled.div`\n  font-size: 18px;\n`;\n\nfunction Post({ post }) {\n  return (\n    <PostContainer>\n      <PostHeader>\n        <PostTitle>{post.title}</PostTitle>\n        <PostTime>{new Date(post.createdAt).toLocaleString()}</PostTime>\n      </PostHeader>\n      <PostBody>{post.body}</PostBody>\n    </PostContainer>\n  );\n}\n\nPost.propTypes = {\n  post: PropTypes.object,\n};\n\nexport default function ArticlePage() {\n  let { postID } = useParams();\n  const dispatch = useDispatch();\n  const isLoading = useSelector((store) => store.posts.isLoadingPost);\n  const post = useSelector((store) => store.posts.post);\n\n  useEffect(() => {\n    dispatch(getPost(postID));\n  }, [postID]);\n\n  return (\n    <div>\n      {!isLoading && (\n        <>\n          {post.map((post) => (\n            <Post key={1} post={post} />\n          ))}\n        </>\n      )}\n    </div>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router\";\nimport { newPost, setNewPostResp } from \"../../redux/reducers/postReducer\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst PostPageContainer = styled.div``;\n\nconst PostForm = styled.form``;\n\nconst PostTitle = styled.input`\n  display: block;\n  margin-top: 12px;\n`;\n\nconst PostBody = styled.textarea`\n  display: block;\n  margin-top: 12px;\n`;\n\nconst PostSubmitButton = styled.input`\n  margin-top: 16px;\n`;\n\nexport default function PostPage() {\n  const [postTitle, setPostTitle] = useState(\"\");\n  const [postBody, setPostBody] = useState(\"\");\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const newPostResp = useSelector((store) => store.posts.newPostResp);\n\n  function handlePostSubmit(e) {\n    e.preventDefault();\n    dispatch(\n      newPost({\n        postTitle,\n        postBody,\n      })\n    );\n  }\n\n  function handleChangePostTitle(e) {\n    setPostTitle(e.target.value);\n  }\n\n  function handleChangePostBody(e) {\n    setPostBody(e.target.value);\n  }\n\n  useEffect(() => {\n    if (newPostResp && newPostResp.id) {\n      history.push(\"/posts/\" + newPostResp.id);\n    }\n    return () => {\n      dispatch(setNewPostResp(null));\n    };\n  }, [newPostResp, history]);\n\n  return (\n    <PostPageContainer>\n      <PostForm onSubmit={handlePostSubmit}>\n        <h2>發佈前請先三思...</h2>\n        <PostTitle\n          required\n          value={postTitle}\n          onChange={handleChangePostTitle}\n          placeholder=\"請輸入標題名稱\"\n        ></PostTitle>\n        <PostBody\n          required\n          value={postBody}\n          onChange={handleChangePostBody}\n          rows=\"10\"\n          cols=\"30\"\n          placeholder=\"請輸入內容...\"\n        ></PostBody>\n        <PostSubmitButton type=\"submit\"></PostSubmitButton>\n      </PostForm>\n    </PostPageContainer>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Header from \"./components/Header\";\nimport HomePage from \"./pages/HomePage\";\nimport LoginPage from \"./pages/LoginPage\";\nimport ArticlePage from \"./pages/ArticlePage\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport PostPage from \"./pages/PostPage\";\nimport { getUser } from \"./redux/reducers/userReducer\";\nimport { useDispatch } from \"react-redux\";\n\nconst Root = styled.div`\n  padding-top: 64px;\n`;\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getUser());\n  }, []);\n\n  return (\n    <Root>\n      <Router>\n        <Header>Header</Header>\n        <Switch>\n          <Route exact path=\"/\">\n            <HomePage />\n          </Route>\n          <Route path=\"/login\">\n            <LoginPage />\n          </Route>\n          <Route path=\"/posts/:postID\">\n            <ArticlePage />\n          </Route>\n          <Route path=\"/new-post\">\n            <PostPage />\n          </Route>\n        </Switch>\n      </Router>\n    </Root>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport postReducer from \"./reducers/postReducer\";\nimport userReducer from \"./reducers/userReducer\";\n\nexport const store = configureStore({\n  reducer: {\n    posts: postReducer,\n    user: userReducer,\n  },\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}